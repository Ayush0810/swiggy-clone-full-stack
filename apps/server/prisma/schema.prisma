generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                 String
  email                String       @unique
  password             String
  phone                Int          @unique
  otp                  String?
  isOwner              Boolean      @default(false)
  orders               Order[]
  address              Address[]
  ownedRestaurants     Restaurant[]
  forgotPasswordToken  String?
  forgotPasswordExpiry DateTime?
  createdAt            DateTime     @default(now())
  updatedAt            DateTime     @updatedAt
}

model Address {
  id        String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name      AddressName
  latitude  Float
  longitude Float
  radius    Int
  floor     String
  location  String
  city      String
  state     String
  nearBy    String?
  pincode   Int
  User      User?       @relation(fields: [userId], references: [id])
  userId    String?     @db.Uuid
}

enum AddressName {
  HOME
  WORK
  OTHER
}

model Order {
  id           String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId       String
  restaurantId String
  totalAmount  Float
  user         User       @relation(fields: [userId], references: [id])
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id])
  foodItems    FoodItem[]
  Payment      Payment[]
}

model FoodItem {
  id           String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name         String
  price        Float
  Order        Order?      @relation(fields: [orderId], references: [id])
  orderId      String?     @db.Uuid
  Restaurant   Restaurant? @relation(fields: [restaurantId], references: [id])
  restaurantId String?     @db.Uuid
}

model Restaurant {
  id        String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name      String
  location  String
  foodItems FoodItem[]
  ownerId   String
  owner     User       @relation(fields: [ownerId], references: [id])
  Order     Order[]
  userId    String?    @db.Uuid
}

model Payment {
  id            String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  paymentMethod String
  amount        Decimal
  status        String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  orderId       String
  order         Order    @relation(fields: [orderId], references: [id])
}
